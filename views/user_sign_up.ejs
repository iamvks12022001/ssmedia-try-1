
<div id="signin">
  <link rel="stylesheet" href="/css/signin.css" />
  <img
    style="width: 20%; margin: auto; margin-right: 2%; margin-left: 14%; padding: 3%"
    src="../uploads/images/logo.jpg"
  />
  <div class="screen-1" style="margin: auto; margin-left: 1%; width: 25%; ">
    <!-- action="/users/create" -->
    <form action="/users/verifyemail" id ="theForm" method="POST" style="margin-top: 35%">
      <input type="text" name="faceid" id="faceid" hidden  />
      <div class="email" id="name">
        <label   style="text-decoration: none; color: rgb(7, 7, 7); font-size: medium;
        font-weight: 1000;" for="name">Name</label>
        <div class="sec-2">
          <ion-icon name="mail-outline"></ion-icon>
          <input type="text" name="name" id="na" placeholder="Your Name" required />
        </div>
      </div>

      <div class="email" id="email" style="margin-top: 2em;">
        <label  style="text-decoration: none; color: rgb(7, 7, 7); font-size: medium;
        font-weight: 1000;" for="email">Email Address</label>
        <div class="sec-2">
          <ion-icon name="mail-outline"></ion-icon>
          <input
            type="email"
            name="email"
            id="em"
            placeholder="Username@gmail.com"
            required
          />
        </div>
      </div>

      <div class="password" >
        <label  style="text-decoration: none; color: rgb(7, 7, 7); font-size: medium;
        font-weight: 1000;"  for="password">Password</label>
        <div class="sec-2">
          <ion-icon name="lock-closed-outline"></ion-icon>
          <input
            class="pas"
            type="password"
            name="password"
            id="pass"
            placeholder="············"
            required
          />
          <ion-icon class="show-hide" name="eye-outline"></ion-icon>
        </div>
      </div>

      <div class="password" >
        <label  style="text-decoration: none; color: rgb(7, 7, 7); font-size: medium;
        font-weight: 1000;"  for="confirm_password">Confirm Password</label>
        <div class="sec-2">
          <ion-icon name="lock-closed-outline"></ion-icon>
          <input
            class="pas"
            type="password"
            id="cpass"
            name="confirm_password"
            placeholder="············"
            required
          />
          <ion-icon class="show-hide" name="eye-outline"></ion-icon>
        </div>
      </div>

      <button class="login" type="submit" style="color: #ffffff">Sign Up</button>
     
      <button class="login" type="button" style="color: #f5f0f0; background-color: #134001" 
      onclick="enrollNewUser()"
      title="Enroll a new user on this FACEIO application">
        <a style="text-decoration: none; color: rgb(255, 255, 255);" > Sign Up Using Face</a>
      </button>
     <hr>
      <button class="login" style="color: #f5f0f0; background-color: #fd0a0a">
        <a style="text-decoration: none; color: rgb(255, 255, 255);" href="/users/auth/google">Google Sign In/Sign Up</a>
      </button>
    </form>
    <div class="footer">
      <span><a style="text-decoration: none; color: rgb(7, 7, 7); font-size: medium;
        font-weight: 1000;" href="./sign-in"> Sign in</a></span
      >
    </div>
  </div>

  
</div>
  <!-- //we are using post methd bcz we are sending data to server -->
</div>
<div id="faceio-modal"></div>
<script src="https://cdn.faceio.net/fio.js"></script>
<script type="text/javascript">
  const faceio = new faceIO("fioaba8a"); // Replace with your application Public ID
  function enrollNewUser() {

    // console.log( $("#em").val() , $("#pass").val() , $("#na").val() , $("#cpass").val() );
    if(! $("#em").val() || ! $("#pass").val() || ! $("#na").val() || ! $("#cpass").val()){
    //  console.log("q2");
      alert("Please fill all the fields");
    }
    else{
     // console.log("q3");
      faceio
      .enroll({
        locale: "auto", // Default user locale
        userConsent: false, // Set to true if you have already collected user consent
        payload: {
          pass: $("#pass").val(), // Example of dummy ID linked to this particular user
          email: $("#em").val(),
        },
      })
      .then((userInfo) => {
        // User Successfully Enrolled!
        alert(
          `User Successfully Enrolled! Details:
  Unique Facial ID: ${userInfo.facialId}
  Enrollment Date: ${userInfo.timestamp}
  Gender: ${userInfo.details.gender}
  Age Approximation: ${userInfo.details.age}`
        );
        document.getElementById("faceid").value = userInfo.facialId;
        console.log(userInfo);
        // handle success, save the facial ID, redirect to dashboard...
      })
      .then((userInfo)=>{
        document.getElementById('theForm').submit();
      })
      .catch((errCode) => {
        handleError(errCode);
      });
    }
    //create new user with atrribute uniquefaceId a,
    //during sign in authentication use webhook for getting unique id and email in payload and search this in database
    //if found then authenticated else not
   
  }
  function handleError(errCode) {
        switch (errCode) {
          case fioErrCode.PERMISSION_REFUSED:
            console.log(
              "Access to the Camera stream was denied by the end user"
            );
            break;
          case fioErrCode.NO_FACES_DETECTED:
            console.log(
              "No faces were detected during the enroll or authentication process"
            );
            break;
          case fioErrCode.UNRECOGNIZED_FACE:
            console.log("Unrecognized face on this application's Facial Index");
            break;
          case fioErrCode.MANY_FACES:
            console.log(
              "Two or more faces were detected during the scan process"
            );
            break;
          case fioErrCode.PAD_ATTACK:
            console.log(
              "Presentation (Spoof) Attack (PAD) detected during the scan process"
            );
            break;
          case fioErrCode.FACE_MISMATCH:
            console.log(
              "Calculated Facial Vectors of the user being enrolled do not matches"
            );
            break;
          case fioErrCode.WRONG_PIN_CODE:
            console.log(
              "Wrong PIN code supplied by the user being authenticated"
            );
            break;
          case fioErrCode.PROCESSING_ERR:
            console.log("Server side error");
            break;
          case fioErrCode.UNAUTHORIZED:
            console.log(
              "Your application is not allowed to perform the requested operation (eg. Invalid ID, Blocked, Paused, etc.). Refer to the FACEIO Console for additional information"
            );
            break;
          case fioErrCode.TERMS_NOT_ACCEPTED:
            console.log(
              "Terms & Conditions set out by FACEIO/host application rejected by the end user"
            );
            break;
          case fioErrCode.UI_NOT_READY:
            console.log(
              "The FACEIO Widget could not be (or is being) injected onto the client DOM"
            );
            break;
          case fioErrCode.SESSION_EXPIRED:
            console.log(
              "Client session expired. The first promise was already fulfilled but the host application failed to act accordingly"
            );
            break;
          case fioErrCode.TIMEOUT:
            console.log(
              "Ongoing operation timed out (eg, Camera access permission, ToS accept delay, Face not yet detected, Server Reply, etc.)"
            );
            break;
          case fioErrCode.TOO_MANY_REQUESTS:
            console.log(
              "Widget instantiation requests exceeded for freemium applications. Does not apply for upgraded applications"
            );
            break;
          case fioErrCode.EMPTY_ORIGIN:
            console.log(
              "Origin or Referer HTTP request header is empty or missing"
            );
            break;
          case fioErrCode.FORBIDDDEN_ORIGIN:
            console.log("Domain origin is forbidden from instantiating fio.js");
            break;
          case fioErrCode.FORBIDDDEN_COUNTRY:
            console.log(
              "Country ISO-3166-1 Code is forbidden from instantiating fio.js"
            );
            break;
          case fioErrCode.SESSION_IN_PROGRESS:
            console.log(
              "Another authentication or enrollment session is in progress"
            );
            break;
          case fioErrCode.NETWORK_IO:
          default:
            console.log(
              "Error while establishing network connection with the target FACEIO processing node"
            );
            break;
        }
      }
  </script>


